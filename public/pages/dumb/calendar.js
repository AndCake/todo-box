(function (module) {
	return module.exports = function() {
		var ENV = "production";
var __resultComponent = (function () {
'use strict';

function __$styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var styles = (function (code) { return code; })("calendar{display:inline-block;background:#fff;-webkit-box-shadow:0 0 10px rgba(0,0,0,.25);box-shadow:0 0 10px rgba(0,0,0,.25);width:13em}calendar .month-picker{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}calendar table{width:100%}calendar table td,calendar table th{text-align:center}calendar table th{background:#e5e5e5}calendar table td{cursor:pointer}calendar table td:hover{color:#e2f0a0;background:#6c7e15}calendar table td.now{background:#de94ab}@media screen and (max-width:686px){calendar{font-size:130%}}", {});

function getWeekDay(year, month, day) {
	var weekDay = new Date(year + '-' + month + '-' + day).getDay() - 1;
	if (weekDay < 0) { weekDay = 6; }
	return weekDay;
}

function calculateMonth(year, month) {
	var days = [];
	for (var day = 1; day < 32; day += 1) {
		if (Number.isNaN(new Date(year + '-' + month + '-' + day).getTime())) {
			break;
		}
		days.push(day);
	}
	for (var fillup = 0, upTo = getWeekDay(year, month, 1); fillup < upTo; fillup += 1) {
		days.unshift('');
	}

	for (var fillup$1 = getWeekDay(year, month, days[days.length - 1]), upTo$1 = 6; fillup$1 < upTo$1; fillup$1 += 1) {
		days.push('');
	}

	var weeks = new Array(Math.ceil(days.length / 7));
	for (var week = 0; week < weeks.length; week += 1) {
		weeks[week] = days.slice(week * 7, week * 7 + 7);
	}

	return weeks;
}

var Calendar = function Calendar() {
	var _this = this || {};
	_this.props = {
		weekDays: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],
		months: ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
		currentMonth: new Date().getMonth() + 1,
		currentYear: new Date().getFullYear(),
		currentDay: new Date().getDate(),
		now: new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getDate(),
		weeks: []
	};
};

var prototypeAccessors = { styles: {},events: {} };

Calendar.prototype.render = function render (data) {
		var this$1 = this;

	var month = data.props.currentYear + '-' + data.props.currentMonth + '-';
	return (
		this.createNode( 'div', { class: "calendar" },
				this.createNode( 'div', { class: "month-picker" },
					this.createNode( 'button', { type: "button", class: "previous-month" }, "‹"),
					data.props.months[data.props.currentMonth],
					this.createNode( 'select', { name: "year", size: "1" },
						data.props.years.map((function (year) { return (
						this.createNode( 'option', { value: year }, year)
					); }).bind(this))
					),
					this.createNode( 'button', { type: "button", class: "next-month" }, "›")
				),
				this.createNode( 'table', { class: "month", border: "0" },
					this.createNode( 'thead', null,
						this.createNode( 'tr', null,
							data.props.weekDays.map((function (day) { return (
							this.createNode( 'th', null, day )
						); }).bind(this))
						)
					),
					this.createNode( 'tbody', null,
						data.props.weeks.map((function (week) { return (
						this.createNode( 'tr', null,
								week.map((function (day) { return (
								this.createNode( 'td', { class: data.props.now === (month + day) ? 'now' : '' }, day)
							); }).bind(this$1))
							)
					); }).bind(this))
					)
				)
			)
	);
};

prototypeAccessors.styles.get = function () { return styles; };
prototypeAccessors.events.get = function () {
	return {
		select: {change: function change() {
			this.getHost().props.weeks = calculateMonth(this.value, this.getHost().props.currentMonth);
			this.getHost().setProps('currentYear', this.value);
		}},
		'.previous-month': {click: function click() {
			var month = this.getHost().props.currentMonth;
			month -= 1;
			if (month < 1) {
				month = 12;
				this.getHost().props.currentYear -= 1;
			}
			this.getHost().props.weeks = calculateMonth(this.getHost().props.currentYear, month);
			this.getHost().setProps('currentMonth', month);
		}},
		'.next-month': {click: function click() {
			var month = this.getHost().props.currentMonth;
			month += 1;
			if (month > 12) {
				month = 1;
				this.getHost().props.currentYear += 1;
			}
			this.getHost().props.weeks = calculateMonth(this.getHost().props.currentYear, month);
			this.getHost().setProps('currentMonth', month);
		}},
		'.month td': {click: function click(event) {
			event.preventDefault();
			event.stopPropagation();
			event.stopImmediatePropagation();
			var host = this.getHost();
			var now = host.props.currentYear + '-' + host.props.currentMonth + '-' + this.innerText;
			now = now.replace(/-([1-9]\b)/g, '-0$1');
			var customEvent = new CustomEvent('datechosen', {
				bubbles: true,
				cancelable: false,
				detail: now
			});
			this.getHost().dispatchEvent(customEvent);
		}}
	};
};

Calendar.prototype.onrender = function onrender () {
	this.querySelector('select').value = this.props.currentYear;
};

Calendar.prototype.onmount = function onmount () {
		var this$1 = this;

	if (this.props.date) {
		var ref = this.props.date.split('-');
			var year = ref[0];
			var month = ref[1];
			var day = ref[2];
		if (year && year.length === 4) {
			this.props.currentYear = ~~year;
		}
		if (month && month.length === 2) {
			this.props.currentMonth = ~~month.replace(/^0/, '');
		}
		if (day && day.length === 2) {
			this.props.currentDay = ~~day.replace(/^0/, '');
		}
	}
	this.props.weeks = calculateMonth(this.props.currentYear, this.props.currentMonth);
	this.props.years = new Array(10);
	for (var year$1 = 0; year$1 < 10; year$1 += 1) {
		this$1.props.years[year$1] = year$1 + new Date().getFullYear();
	}
};

Object.defineProperties( Calendar.prototype, prototypeAccessors );

return Calendar;

}());
	return __resultComponent;
	}
}(typeof module !== 'undefined' ? module : {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
